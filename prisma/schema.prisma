generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(uuid())
  name       String
  phone      String   @unique
  email      String   @unique
  district   String
  thana      String
  institute  String
  role       String   @default("USER")
  batch      String   @default("Others")
  created_at DateTime @default(now()) @map("created_at")
  updated_at DateTime @updatedAt @map("updated_at")

  submissions Submission[]
  sessions    Session[]

  @@map("users")
}

model Session {
  id        String   @id
  userId    String   @map("user_id")
  expiresAt DateTime @map("expites_at")

  user User @relation(references: [id], fields: [userId], onDelete: Cascade)

  @@map("sessions")
}

model Option {
  id          String  @id @default(uuid())
  option_text String
  correct     Boolean
  question_id String

  question Question @relation(fields: [question_id], references: [id])

  @@index([question_id], map: "question_id_index")
  @@map("question_options")
}

model Question {
  id         String  @id @default(uuid())
  question   String
  difficulty String? @default("Medium")
  subject    String
  exam_id    String
  explain    String?

  options Option[]
  exam    Exam?    @relation(fields: [exam_id], references: [id])

  @@map("questions")
}

model Exam {
  id                    String   @id @default(uuid())
  title                 String
  subject               String
  start_time            DateTime
  end_time              DateTime
  duration              Int
  total_marks           Int
  result_publish_time   DateTime
  solution_publish_time DateTime
  created_at            DateTime @default(now()) @map("created_at")
  updated_at            DateTime @updatedAt @map("updated_at")

  submissions Submission[]
  questions   Question[]

  @@map("exams")
}

model Submission {
  id           String    @id @default(uuid())
  user_id      String
  exam_id      String
  answers      String[]
  attempt      Int       @default(1)
  marks        Float     @default(0)
  correct      Int       @default(0)
  incorrect    Int       @default(0)
  skipped      Int       @default(0)
  duration     Int?
  status       String    @default("pending")
  submitted_at DateTime?

  created_at DateTime @default(now()) @map("created_at")
  updated_at DateTime @updatedAt @map("updated_at")

  user User @relation(fields: [user_id], references: [id])
  exam Exam @relation(fields: [exam_id], references: [id])

  @@index([user_id], map: "user_id_index")
  @@index([exam_id], map: "exam_id_index")
  @@map("submissions")
}
